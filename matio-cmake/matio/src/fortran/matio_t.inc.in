!
! Copyright (c) 2008-2018, Christopher C. Hulbert
! All rights reserved.
!
! Redistribution and use in source and binary forms, with or without
! modification, are permitted provided that the following conditions are met:
!
! 1. Redistributions of source code must retain the above copyright notice, this
!    list of conditions and the following disclaimer.
!
! 2. Redistributions in binary form must reproduce the above copyright notice,
!    this list of conditions and the following disclaimer in the documentation
!    and/or other materials provided with the distribution.
!
! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
! AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
! DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
! FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
! SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
! CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
! OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
! OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
!

INTEGER,PARAMETER :: mat_ptr = @SIZEOF_VOID_P@
INTEGER,PARAMETER :: mat_int = @SIZEOF_INT@
INTEGER,PARAMETER :: mat_size_t = @SIZEOF_SIZE_T@
INTEGER(mat_ptr),POINTER :: nullptr => null()

TYPE mat_t
    CHARACTER(LEN=128)  :: header
    INTEGER             :: mat_file_ver
    INTEGER(mat_ptr)    :: mat_t_c_ptr = 0
END TYPE mat_t
TYPE matvar_t
    INTEGER                          :: nbytes
    INTEGER                          :: rank
    INTEGER                          :: data_type
    INTEGER                          :: data_size
    INTEGER                          :: class_type
    INTEGER                          :: isComplex
    INTEGER                          :: isGlobal
    INTEGER                          :: isLogical
    INTEGER(mat_size_t),DIMENSION(7) :: dims = (/0,0,0,0,0,0,0/)
    CHARACTER(LEN=64)                :: name
    INTEGER(mat_ptr)                 :: matvar_t_c_ptr = 0
END TYPE matvar_t

    INTEGER,PARAMETER :: MAT_ACC_RDONLY   = 1
    INTEGER,PARAMETER :: MAT_ACC_RDWR     = 2

    INTEGER,PARAMETER :: MAT_FT_MAT4      = 16
    INTEGER,PARAMETER :: MAT_FT_MAT5      = 256
    INTEGER,PARAMETER :: MAT_FT_MAT73     = 512

    INTEGER,PARAMETER :: MAT_T_UNKNOWN    =  0
    INTEGER,PARAMETER :: MAT_T_INT8       =  1
    INTEGER,PARAMETER :: MAT_T_UINT8      =  2
    INTEGER,PARAMETER :: MAT_T_INT16      =  3
    INTEGER,PARAMETER :: MAT_T_UINT16     =  4
    INTEGER,PARAMETER :: MAT_T_INT32      =  5
    INTEGER,PARAMETER :: MAT_T_UINT32     =  6
    INTEGER,PARAMETER :: MAT_T_SINGLE     =  7
    INTEGER,PARAMETER :: MAT_T_DOUBLE     =  9
    INTEGER,PARAMETER :: MAT_T_INT64      = 12
    INTEGER,PARAMETER :: MAT_T_UINT64     = 13
    INTEGER,PARAMETER :: MAT_T_MATRIX     = 14
    INTEGER,PARAMETER :: MAT_T_COMPRESSED = 15
    INTEGER,PARAMETER :: MAT_T_UTF8       = 16
    INTEGER,PARAMETER :: MAT_T_UTF16      = 17
    INTEGER,PARAMETER :: MAT_T_UTF32      = 18

    INTEGER,PARAMETER :: MAT_C_CELL       =  1
    INTEGER,PARAMETER :: MAT_C_STRUCT     =  2
    INTEGER,PARAMETER :: MAT_C_OBJECT     =  3
    INTEGER,PARAMETER :: MAT_C_CHAR       =  4
    INTEGER,PARAMETER :: MAT_C_SPARSE     =  5
    INTEGER,PARAMETER :: MAT_C_DOUBLE     =  6
    INTEGER,PARAMETER :: MAT_C_SINGLE     =  7
    INTEGER,PARAMETER :: MAT_C_INT8       =  8
    INTEGER,PARAMETER :: MAT_C_UINT8      =  9
    INTEGER,PARAMETER :: MAT_C_INT16      = 10
    INTEGER,PARAMETER :: MAT_C_UINT16     = 11
    INTEGER,PARAMETER :: MAT_C_INT32      = 12
    INTEGER,PARAMETER :: MAT_C_UINT32     = 13
    INTEGER,PARAMETER :: MAT_C_INT64      = 14
    INTEGER,PARAMETER :: MAT_C_UINT64     = 15
    INTEGER,PARAMETER :: MAT_C_FUNCTION   = 16
    INTEGER,PARAMETER :: MAT_C_OPAQUE     = 17

    INTEGER,PARAMETER :: COMPRESSION_NONE = 0
    INTEGER,PARAMETER :: COMPRESSION_ZLIB = 1
